<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ecom</groupId>
    <artifactId>bddPractice</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>7.22.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>7.22.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>maven-cucumber-reporting</artifactId>
            <version>5.8.5</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.github.temyers/cucumber-jvm-parallel-plugin -->
<!--        <dependency>-->
<!--            <groupId>com.github.temyers</groupId>-->
<!--            <artifactId>cucumber-jvm-parallel-plugin</artifactId>-->
<!--            <version>5.0.0</version>-->
<!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.14.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>

                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.3</version>
                <configuration>
                    <threadCount>2</threadCount>
                 <forkCount>1</forkCount>
                   <reuseForks>true</reuseForks>

                    <includes>
                        <include>**/*TestRunner.class</include>
                    </includes>
                    <parallel>methods</parallel>
                </configuration>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <compilerArgs>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.masterthought</groupId>
                <artifactId>maven-cucumber-reporting</artifactId>
                <version>5.8.5</version>
                <executions>
                    <execution>
                        <id>execution</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <projectName>bddPractice</projectName>
                            <!-- optional, per documentation set this to "true" to bypass generation of Cucumber Reports entirely, defaults to false if not specified -->
                            <skip>false</skip>
                            <!-- output directory for the generated report -->
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <!-- optional, defaults to outputDirectory if not specified -->
                            <inputDirectory>${project.build.directory}</inputDirectory>
                            <jsonFiles>
                                <!-- supports wildcard or name pattern -->
                                <param>**/*.json</param>
                            </jsonFiles>
                            <!-- optional, defaults to outputDirectory if not specified -->
                            <!--                            <classificationDirectory>${project.build.directory}/classifications</classificationDirectory>-->
                            <!--                            <classificationFiles>-->
                            <!--                                &lt;!&ndash; supports wildcard or name pattern &ndash;&gt;-->
                            <!--                                <param>sample.properties</param>-->
                            <!--                                <param>other.properties</param>-->
                            <!--                            </classificationFiles>-->
<!--                            <parallelTesting>false</parallelTesting>-->
                            <!-- optional, set true to group features by its Ids -->
                            <mergeFeaturesById>false</mergeFeaturesById>
                            <!-- optional, set true to get a final report with latest results of the same test from different test runs -->
                            <mergeFeaturesWithRetest>false</mergeFeaturesWithRetest>
                            <!-- optional, set true to fail build on test failures -->
                            <checkBuildResult>false</checkBuildResult>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>com.github.temyers</groupId>-->
<!--                <artifactId>cucumber-jvm-parallel-plugin</artifactId>-->
<!--                <version>5.0.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>generateRunners</id>-->
<!--                        <phase>generate-test-sources</phase>-->
<!--                        <goals>-->
<!--                            <goal>generateRunners</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            &lt;!&ndash; Mandatory &ndash;&gt;-->
<!--                            &lt;!&ndash; List of package names to scan for glue code. &ndash;&gt;-->
<!--                            <glue>-->
<!--                                <package>stepdef</package>-->

<!--                            </glue>-->
<!--                            &lt;!&ndash; These are optional, with the default values &ndash;&gt;-->
<!--                            &lt;!&ndash; Where to output the generated tests &ndash;&gt;-->
<!--                            <outputDirectory>${project.build.directory}/generated-test-sources/cucumber-->
<!--                            </outputDirectory>-->
<!--                            &lt;!&ndash; The directory, which must be in the root of the runtime classpath, containing your feature files.  &ndash;&gt;-->
<!--                            <featuresDirectory>src/test/resources/feature/</featuresDirectory>-->
<!--                            &lt;!&ndash; Directory where the cucumber report files shall be written  &ndash;&gt;-->
<!--                            <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>-->
<!--                            &lt;!&ndash; List of cucumber plugins. When none are provided the json formatter is used. For more-->
<!--                                 advanced usage see section about configuring cucumber plugins &ndash;&gt;-->
<!--                            <plugins>-->
<!--                                <plugin>-->
<!--                                    <name>json</name>-->
<!--                                </plugin>-->
<!--&lt;!&ndash;                                <plugin>&ndash;&gt;-->
<!--&lt;!&ndash;                                    <name>com.example.CustomHtmlFormatter</name>&ndash;&gt;-->
<!--&lt;!&ndash;                                    <extension>html</extension>&ndash;&gt;-->
<!--&lt;!&ndash;                                </plugin>&ndash;&gt;-->
<!--                            </plugins>-->
<!--                            &lt;!&ndash; CucumberOptions.strict property &ndash;&gt;-->
<!--                            <strict>true</strict>-->
<!--                            &lt;!&ndash; CucumberOptions.monochrome property &ndash;&gt;-->
<!--                            <monochrome>true</monochrome>-->
<!--                            &lt;!&ndash; The tags to run, maps to CucumberOptions.tags property. Default is no tags. &ndash;&gt;-->
<!--                            <tags>-->
<!--                                <tag>@API</tag>-->
<!--                            </tags>-->
<!--                            &lt;!&ndash; Generate TestNG runners instead of JUnit ones. &ndash;&gt;-->
<!--                            <useTestNG>false</useTestNG>-->
<!--                            &lt;!&ndash; The naming scheme to use for the generated test classes.  One of ['simple', 'feature-title', 'pattern'] &ndash;&gt;-->
<!--                            <namingScheme>simple</namingScheme>-->
<!--                            &lt;!&ndash; The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.&ndash;&gt;-->
<!--                    &lt;!&ndash;        <namingPattern>Parallel{c}IT</namingPattern> &ndash;&gt;-->
<!--                            &lt;!&ndash; One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. &ndash;&gt;-->
<!--                            <parallelScheme>SCENARIO</parallelScheme>-->
<!--                            &lt;!&ndash; Specify a custom template for the generated sources (this is a path relative to the project base directory) &ndash;&gt;-->
<!--&lt;!&ndash;                            <customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate>&ndash;&gt;-->
<!--&lt;!&ndash;                            &lt;!&ndash; Specify a custom package name for generated sources. Default is no package.&ndash;&gt;&ndash;&gt;-->
<!--                            <packageName>com.example</packageName>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>